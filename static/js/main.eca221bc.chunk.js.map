{"version":3,"sources":["Components/Weather/WeatherDetails.js","Components/Canvas/Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","useState","userData","setUserData","getGiHubUserWithAxios","a","axios","get","response","data","useEffect","location","name","country","region","lat","lon","timezone_id","current","pressure","temperature","humidity","wind_speed","weather_descriptions","Canvas","x","setColor","flag","prevX","currX","prevY","currY","React","canvas","document","getElementById","getContext","console","log","addEventListener","e","findxy","res","ctx","clientX","offsetLeft","clientY","offsetTop","beginPath","fillStyle","fillRect","closePath","draw","moveTo","lineTo","strokeStyle","lineWidth","stroke","id","width","height","background","style","border","position","top","left","borderRadius","onClick","imgData","toDataURL","pdf","jsPDF","addImage","save","clearRect","clear","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eca221bc.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nconst gitHubUrl =\r\n  \"http://api.weatherstack.com/current?access_key=708a363c0f949c21910cf909044d781c&query=London,United Kingdom\";\r\n\r\nfunction Weather() {\r\n  const [userData, setUserData] = useState({});\r\n\r\n  const getGiHubUserWithAxios = async () => {\r\n    const response = await axios.get(gitHubUrl);\r\n    setUserData(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGiHubUserWithAxios();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h5>Name : {userData.location ? userData.location.name : \"\"}</h5>\r\n      <h5>Country :{userData.location ? userData.location.country : \"\"}</h5>\r\n      <h5>Region :{userData.location ? userData.location.region : \"\"}</h5>\r\n      <h5>Latitude :{userData.location ? userData.location.lat : \"\"}</h5>\r\n      <h5>Longitude :{userData.location ? userData.location.lon : \"\"}</h5>\r\n      <h5>\r\n        Timezone :{userData.location ? userData.location.timezone_id : \"\"}\r\n      </h5>\r\n      <h5>Pressure :{userData.current ? userData.current.pressure : \"\"}</h5>\r\n      <h5>\r\n        Temperature :{userData.current ? userData.current.temperature : \"\"}\r\n      </h5>\r\n      <h5>Humidity :{userData.current ? userData.current.humidity : \"\"}</h5>\r\n      <h5>Wind Speed :{userData.current ? userData.current.wind_speed : \"\"}</h5>\r\n      <h5>\r\n        Weather :{userData.current ? userData.current.weather_descriptions : \"\"}\r\n      </h5>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React, { useState } from \"react\";\r\nimport { jsPDF } from \"jspdf\";\r\n\r\nfunction Canvas() {\r\n  var [x, setColor] = useState(\"black\");\r\n  var flag = false,\r\n    prevX = 0,\r\n    currX = 0,\r\n    prevY = 0,\r\n    currY = 0,\r\n    dot_flag = false,\r\n    y = 2;\r\n\r\n  React.useEffect(() => {\r\n    const canvas = document.getElementById(\"myCanvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    console.log(\"use Effect\", x);\r\n    canvas.addEventListener(\r\n      \"mousemove\",\r\n      function (e) {\r\n        findxy(\"move\", e);\r\n      },\r\n      false\r\n    );\r\n    canvas.addEventListener(\r\n      \"mousedown\",\r\n      function (e) {\r\n        findxy(\"down\", e);\r\n      },\r\n      false\r\n    );\r\n    canvas.addEventListener(\r\n      \"mouseup\",\r\n      function (e) {\r\n        findxy(\"up\", e);\r\n      },\r\n      false\r\n    );\r\n    canvas.addEventListener(\r\n      \"mouseout\",\r\n      function (e) {\r\n        findxy(\"out\", e);\r\n      },\r\n      false\r\n    );\r\n  }, [x]);\r\n\r\n  const findxy = (res, e) => {\r\n    const canvas = document.getElementById(\"myCanvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    if (res == \"down\") {\r\n      prevX = currX;\r\n      prevY = currY;\r\n      currX = e.clientX - canvas.offsetLeft;\r\n      currY = e.clientY - canvas.offsetTop;\r\n\r\n      flag = true;\r\n      dot_flag = true;\r\n      if (dot_flag) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = x;\r\n        ctx.fillRect(currX, currY, 2, 2);\r\n        ctx.closePath();\r\n        dot_flag = false;\r\n      }\r\n    }\r\n    if (res == \"up\" || res == \"out\") {\r\n      flag = false;\r\n    }\r\n    if (res == \"move\") {\r\n      if (flag) {\r\n        prevX = currX;\r\n        prevY = currY;\r\n        currX = e.clientX - canvas.offsetLeft;\r\n        currY = e.clientY - canvas.offsetTop;\r\n        console.log(x);\r\n        draw(x);\r\n      }\r\n    }\r\n  };\r\n\r\n  const draw = (x) => {\r\n    const ctx = document.getElementById(\"myCanvas\").getContext(\"2d\");\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(prevX, prevY);\r\n    ctx.lineTo(currX, currY);\r\n    console.log(x);\r\n    ctx.strokeStyle = x;\r\n    ctx.lineWidth = y;\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  };\r\n\r\n  const pdf = () => {\r\n    const canvas = document.getElementById(\"myCanvas\");\r\n    var imgData = canvas.toDataURL(\"image/png\", 1);\r\n    var pdf = new jsPDF();\r\n    pdf.addImage(imgData, \"png\", 0, 0);\r\n    pdf.save(\"download.pdf\");\r\n  };\r\n\r\n  const clear = () => {\r\n    const canvas = document.getElementById(\"myCanvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <canvas\r\n        id=\"myCanvas\"\r\n        width=\"500\"\r\n        height=\"500\"\r\n        background=\"white\"\r\n        style={{ border: \"1px solid #d3d3d3\" }}\r\n      ></canvas>\r\n      {/* <button onClick={() => init()}>Add Point</button> */}\r\n      <div style={{ position: \"absolute\", top: \"12%\", left: \"43%\" }}>\r\n        Choose Color\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"15%\",\r\n          left: \"35%\",\r\n          width: \"15px\",\r\n          height: \"15px\",\r\n          borderRadius: \"20px\",\r\n          background: \"green\",\r\n        }}\r\n        onClick={() => setColor(\"green\")}\r\n      ></div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"15%\",\r\n          left: \"45%\",\r\n          width: \"15px\",\r\n          height: \"15px\",\r\n          borderRadius: \"20px\",\r\n          background: \"red\",\r\n        }}\r\n        onClick={() => setColor(\"red\")}\r\n      ></div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"25%\",\r\n          left: \"35%\",\r\n          width: \"15px\",\r\n          height: \"15px\",\r\n          borderRadius: \"20px\",\r\n          background: \"blue\",\r\n        }}\r\n        onClick={() => setColor(\"blue\")}\r\n      ></div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"25%\",\r\n          left: \"45%\",\r\n          width: \"15px\",\r\n          height: \"15px\",\r\n          borderRadius: \"20px\",\r\n          background: \"yellow\",\r\n        }}\r\n        onClick={() => setColor(\"yellow\")}\r\n      ></div>\r\n      <button onClick={() => pdf()}>download</button>\r\n      <button onClick={() => clear()}>Clear</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import Weather from \"./Components/Weather/WeatherDetails\";\r\nimport Canvas from \"./Components/Canvas/Canvas\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Canvas />\r\n      <Weather />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}