{"version":3,"sources":["Components/Weather/WeatherDetails.js","Components/Canvas/Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","useState","userData","setUserData","getGiHubUserWithAxios","a","axios","get","response","data","useEffect","Container","Card","Body","Title","className","Row","Col","Text","location","name","country","region","lat","lon","timezone_id","current","pressure","temperature","humidity","wind_speed","weather_descriptions","Canvas","x","setColor","flag","prevX","currX","prevY","currY","React","canvas","document","getElementById","addEventListener","e","findxy","res","ctx","getContext","clientX","offsetLeft","clientY","offsetTop","beginPath","fillStyle","fillRect","closePath","draw","moveTo","lineTo","strokeStyle","lineWidth","stroke","id","width","height","Button","variant","onClick","imgData","toDataURL","pdf","jsPDF","addImage","save","clearRect","clear","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.74da4659.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nconst Url =\r\n  \"http://api.weatherstack.com/current?access_key=708a363c0f949c21910cf909044d781c&query=London,United Kingdom\";\r\n\r\nfunction Weather() {\r\n  const [userData, setUserData] = useState({});\r\n\r\n  const getGiHubUserWithAxios = async () => {\r\n    const response = await axios.get(Url);\r\n    setUserData(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGiHubUserWithAxios();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title className=\"text-center\">Weather Details</Card.Title>\r\n          <br />\r\n          <Row>\r\n            <Col>\r\n              <Card.Text>\r\n                City : {userData.location ? userData.location.name : \"\"}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Country :{userData.location ? userData.location.country : \"\"}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Region :{userData.location ? userData.location.region : \"\"}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Latitude :{userData.location ? userData.location.lat : \"\"}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Longitude :{userData.location ? userData.location.lon : \"\"}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Timezone :\r\n                {userData.location ? userData.location.timezone_id : \"\"}\r\n              </Card.Text>\r\n            </Col>\r\n            <Col>\r\n              <Card.Text>\r\n                Pressure :{userData.current ? userData.current.pressure : \"\"}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Temperature :\r\n                {userData.current ? userData.current.temperature : \"\"}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Humidity :{userData.current ? userData.current.humidity : \"\"}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Wind Speed :\r\n                {userData.current ? userData.current.wind_speed : \"\"}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Weather :\r\n                {userData.current ? userData.current.weather_descriptions : \"\"}\r\n              </Card.Text>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React, { useState } from \"react\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nfunction Canvas() {\r\n  var [x, setColor] = useState(\"black\");\r\n  var flag = false,\r\n    prevX = 0,\r\n    currX = 0,\r\n    prevY = 0,\r\n    currY = 0,\r\n    dot_flag = false,\r\n    y = 1;\r\n\r\n  React.useEffect(() => {\r\n    const canvas = document.getElementById(\"myCanvas\");\r\n    canvas.addEventListener(\r\n      \"mousemove\",\r\n      function (e) {\r\n        findxy(\"move\", e);\r\n      },\r\n      false\r\n    );\r\n    canvas.addEventListener(\r\n      \"mousedown\",\r\n      function (e) {\r\n        findxy(\"down\", e);\r\n      },\r\n      false\r\n    );\r\n    canvas.addEventListener(\r\n      \"mouseup\",\r\n      function (e) {\r\n        findxy(\"up\", e);\r\n      },\r\n      false\r\n    );\r\n    canvas.addEventListener(\r\n      \"mouseout\",\r\n      function (e) {\r\n        findxy(\"out\", e);\r\n      },\r\n      false\r\n    );\r\n  }, [x]);\r\n\r\n  const findxy = (res, e) => {\r\n    const canvas = document.getElementById(\"myCanvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    if (res === \"down\") {\r\n      prevX = currX;\r\n      prevY = currY;\r\n      currX = e.clientX - canvas.offsetLeft;\r\n      currY = e.clientY - canvas.offsetTop;\r\n\r\n      flag = true;\r\n      dot_flag = true;\r\n      if (dot_flag) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = x;\r\n        ctx.fillRect(currX, currY, 2, 2);\r\n        ctx.closePath();\r\n        dot_flag = false;\r\n      }\r\n    }\r\n    if (res === \"up\" || res === \"out\") {\r\n      flag = false;\r\n    }\r\n    if (res === \"move\") {\r\n      if (flag) {\r\n        prevX = currX;\r\n        prevY = currY;\r\n        currX = e.clientX - canvas.offsetLeft;\r\n        currY = e.clientY - canvas.offsetTop;\r\n\r\n        draw(x);\r\n      }\r\n    }\r\n  };\r\n\r\n  const draw = (x) => {\r\n    const ctx = document.getElementById(\"myCanvas\").getContext(\"2d\");\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(prevX, prevY);\r\n    ctx.lineTo(currX, currY);\r\n\r\n    ctx.strokeStyle = x;\r\n    ctx.lineWidth = y;\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  };\r\n\r\n  const pdf = () => {\r\n    const canvas = document.getElementById(\"myCanvas\");\r\n    var imgData = canvas.toDataURL(\"image/png\", 1);\r\n    var pdf = new jsPDF();\r\n    pdf.addImage(imgData, \"png\", 0, 0);\r\n    pdf.save(\"download.pdf\");\r\n  };\r\n\r\n  const clear = () => {\r\n    const canvas = document.getElementById(\"myCanvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"border\">\r\n      <h5 className=\"text-center\">Canvas</h5>\r\n      <Row>\r\n        <Col>\r\n          <canvas\r\n            id=\"myCanvas\"\r\n            width=\"300px\"\r\n            height=\"300px\"\r\n            className=\"border  border-2\"\r\n          ></canvas>\r\n        </Col>\r\n        <Col>\r\n          <h5>Choose Color</h5>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => setColor(\"DarkGreen\")}\r\n          ></Button>{\" \"}\r\n          <Button variant=\"danger\" onClick={() => setColor(\"Crimson\")}></Button>{\" \"}\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => setColor(\"DodgerBlue\")}\r\n          ></Button>{\" \"}\r\n          <Button\r\n            variant=\"warning\"\r\n            onClick={() => setColor(\"DarkOrange\")}\r\n          ></Button>{\" \"}\r\n          <br />\r\n          <br />\r\n          <Button variant=\"success\" onClick={() => pdf()}>\r\n            download\r\n          </Button>{\" \"}\r\n          <Button variant=\"warning\" onClick={() => clear()}>\r\n            Clear\r\n          </Button>\r\n        </Col>\r\n      </Row>{\" \"}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import Weather from \"./Components/Weather/WeatherDetails\";\r\nimport Canvas from \"./Components/Canvas/Canvas\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col>\r\n          <Weather />\r\n        </Col>\r\n      </Row>{\" \"}\r\n      <br />\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col>\r\n          <Canvas />\r\n        </Col>\r\n      </Row>{\" \"}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}